{"version":3,"sources":["petMate/Header.js","petMate/HomepageIntro.js","petMate/PetDetails.js","petMate/HomepagePets.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","className","HomepageIntro","PetDetails","src","alt","HomePagePets","React","Component","App","state","name","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qWAIe,SAASA,IACpB,OACI,gCACI,yBAAKC,GAAG,aACJ,yBAAKC,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAEnB,0BAAMA,UAAU,QAAO,uBAAGA,UAAU,aAAb,KAA8B,wCAErD,0BAAMA,UAAU,UACZ,uBAAGA,UAAU,kBAEjB,yBAAKD,GAAG,OACJ,qCACA,uCACA,2C,MCjBD,SAASE,IACpB,OACI,8BACI,6BAASD,UAAU,OACf,yBAAKA,UAAU,aACX,wCACA,gMACA,sEAEA,uBAAGA,UAAU,QAAO,6C,MCVzB,SAASE,IACpB,OACI,iCACA,yBAAKC,IAAI,6FAA6FC,IAAI,GAAGJ,UAAU,YACvH,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aAAY,0BAAMA,UAAU,UAAhB,QAAoC,0BAAMA,UAAU,UAAhB,iBAC7D,wBAAIA,UAAU,YAAd,iBACA,uBAAGA,UAAU,aAAb,WACA,8BAAM,uBAAGA,UAAU,qBAAnB,IAA2C,0BAAMA,UAAU,gBAAhB,mB,UCNlCK,E,iLAGb,OACI,6BAASL,UAAU,QACf,yBAAKA,UAAU,UACX,oDACA,uDACA,wCAEJ,wBAAIA,UAAU,WAAd,uBACA,kBAACE,EAAD,MACA,4BAAQF,UAAU,QAAlB,a,GAZ0BM,IAAMC,WCqBjCC,E,YAlBb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,KAAM,UAHI,E,sEAOZ,OACE,yBAAKV,UAAU,OACb,kBAACF,EAAD,MACA,kBAACG,EAAD,MACA,kBAAC,EAAD,W,GAZUK,IAAMC,WCMJI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c2c4cb7f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../sass/fragments/header.scss';\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <div id=\"navButton\">\r\n                <div className=\"stick\"></div>\r\n                <div className=\"stick\"></div>\r\n                <div className=\"stick\"></div>\r\n            </div>\r\n            <span className=\"logo\"><i className=\"fa fa-paw\"> </i><a > PetMate</a>\r\n            </span>\r\n            <span className=\"search\">\r\n                <i className=\"fa fa-search\"></i>\r\n            </span>\r\n            <nav id=\"nav\">\r\n                <a >Policy</a>\r\n                <a >About Us</a>\r\n                <a >Contact us</a>\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n}","import React from \"react\";\r\nimport '../sass/fragments/homepageIntro.scss';\r\n\r\nexport default function HomepageIntro() {\r\n    return (\r\n        <main>\r\n            <section className=\"row\">\r\n                <div className=\"container\">\r\n                    <h3>Welcome!</h3>\r\n                    <p>Have you been having headaches on how your pet is going to mate? This is the right place. Take a step by listing your pet for mating and find a match in no time.</p>\r\n                    <h4>Click here to list your pet for mating</h4>\r\n\r\n                    <p className=\"link\"><a >Click Here</a></p>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}","import React from 'react';\r\nimport '../sass/fragments/petDetails.scss';\r\nexport default function PetDetails (){\r\n    return (\r\n        <article>\r\n        <img src=\"https://res.cloudinary.com/ebugo/image/upload/v1577224169/petmate/ueayioss5wbzurteynwz.jpg\" alt=\"\" className=\"pet_img\" />\r\n        <div className=\"p_details\">\r\n            <i className=\"petStatus\"><span className=\"gender\">Male</span><span className=\"status\">Safe to pair</span></i>\r\n            <h5 className=\"pet_name\">Young Puppies</h5>\r\n            <p className=\"pet-breed\">Beagle </p>\r\n            <span><i className=\"fa fa-map-marker\"></i> <span className=\"pet_location\">Ikeja, Lagos</span></span>\r\n        </div>\r\n    </article>\r\n    )\r\n}","import React from \"react\";\r\nimport PetDetails from \"./PetDetails\";\r\nimport \"../sass/fragments/homepagePets.scss\"\r\n\r\nexport default class HomePagePets extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"pets\">\r\n                <div className=\"mobile\">\r\n                    <h3>AVAILABLE FOR MATING</h3>\r\n                    <p>(based on your location)</p>\r\n                    <a >All pets</a>\r\n                </div>\r\n                <h3 className=\"desktop\">Ready to mate pets?</h3>\r\n                <PetDetails />\r\n                <button className=\"more\">More</button>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './sass/App.scss';\nimport Header from \"./petMate/Header\";\nimport HomepageIntro from \"./petMate/HomepageIntro\";\nimport HomepagePets from \"./petMate/HomepagePets\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"Phileo\"\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <HomepageIntro />\n        <HomepagePets />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}